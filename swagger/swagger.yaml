swagger: "2.0"
info:
  description: "This is an assignment of the subject Mobile Software Systems (find out more on the following link: https://www.aut.bme.hu/Course/VIAUMB01)"
  version: "1.0.0"
  title: "Memories"
  termsOfService: "None"
  contact:
    email: "tothbence9922@gmail.com"
  license:
    name: "MIT License"
    url: "https://choosealicense.com/licenses/mit/"
host: "crudcrud.com"
basePath: "/api/db4eb1a682de49dd891bf15785d36c4e"
tags:
  - name: "memory"
    description: "handle the memories stored in the application"
schemes:
  - "https"
  - "http"
paths:
  /memories:
    get:
      tags:
        - "memory"
      summary: "Get all stored memories."
      description: ""
      operationId: "getMemories"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      responses:
        "405":
          description: "Invalid input"
  /memory:
    post:
      tags:
        - "memory"
      summary: "Add a new memory to the existing ones."
      description: ""
      operationId: "addMemory"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Object of the Memory to be posted."
          required: true
          schema:
            $ref: "#/definitions/Memory"
      responses:
        "405":
          description: "Invalid input"
  /memory/{_id}:
    put:
      tags:
        - "memory"
      summary: "Update an existing memory"
      description: ""
      operationId: "updateMemory"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "_id"
          in: "path"
          description: "ID of memory to return"
          required: true
          type: "string"
          format: "string"
        - in: "body"
          name: "body"
          description: "Memory object that needs to be updated."
          required: true
          schema:
            $ref: "#/definitions/Memory"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Memory not found"
        "405":
          description: "Validation exception"
    get:
      tags:
        - "memory"
      summary: "Find memory by ID"
      description: "Returns a single memory"
      operationId: "getMemoryById"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "_id"
          in: "path"
          description: "ID of memory to return"
          required: true
          type: "string"
          format: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Memory"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Memory not found"
    delete:
      tags:
        - "memory"
      summary: "Deletes a memory"
      description: ""
      operationId: "deleteMemory"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "_id"
          in: "path"
          description: "Memory id to delete"
          required: true
          type: "string"
          format: "string"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Memory not found"
definitions:
  Memory:
    type: "object"
    properties:
      memoryId:
        type: "string"
        format: "string"
      _id:
        type: "string"
        format: "string"
      date:
        type: "string"
        format: "date-time"
      title:
        type: "string"
      description:
        type: "string"
      imageUrls:
        type: "array"
        xml:
          name: "image"
          wrapped: true
        items:
          type: "string"
    xml:
      name: "Memory"
externalDocs:
  description: "Find out more about Swagger :)"
  url: "http://swagger.io"